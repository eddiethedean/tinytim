from typing import Any, Dict, ItemsView, Iterator, KeysView, Mapping, MutableSequence, Sequence, Tuple, ValuesView
from typing_extensions import Protocol, runtime_checkable


class GetSequence(Protocol):
    def __getitem__(self, key: str, /) -> Sequence: ...

class GetMutableSequence(Protocol):
    def __getitem__(self, key: str, /) -> MutableSequence: ...

class GetItem(Protocol):
    def __getitem__(self, key: str, /) -> Any: ...

class SetSequence(Protocol):
    def __setitem__(self, key: str, value: Sequence) -> None: ...

class KeyNames(Protocol):
    def keys(self) -> KeysView[str]: ...

class SequenceItems(Protocol):
    def items(self) -> ItemsView[str, Sequence]: ...

class SequenceValues(Protocol):
    def values(self) -> ValuesView[Sequence]: ...

class Clear(Protocol):
    def clear(self) -> None: ...

class DeleteItem(Protocol):
    def __delitem__(self, key: str, /) -> None: ...

class KeyNamesSequenceValues(KeyNames, SequenceValues, Protocol):
    ...

class KeyNamesGetSequence(KeyNames, GetSequence, Protocol):
    ...

class DataMapping(GetSequence, KeyNames, SequenceValues, SequenceItems, Protocol):
    ...

class MutableDataMapping(DataMapping, SetSequence, DeleteItem, Clear, Protocol):
    ...

class KeyNamesGetItem(KeyNames, GetItem, Protocol):
    ...

class KeyNamesGetMutableSequence(KeyNames, GetMutableSequence, Protocol):
    ...

class KeyNamesGetMutableSequenceSequenceValues(KeyNamesGetMutableSequence, SequenceValues, Protocol):
    ...

class SequenceItemsGetMutableSequence(SequenceItems, GetMutableSequence, Protocol):
    ...